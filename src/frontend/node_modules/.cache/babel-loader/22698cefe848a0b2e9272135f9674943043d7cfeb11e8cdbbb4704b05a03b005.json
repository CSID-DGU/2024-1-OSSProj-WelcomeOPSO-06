{"ast":null,"code":"var _jsxFileName = \"E:\\\\hhh\\\\src\\\\frontend\\\\src\\\\QRScan.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { BrowserMultiFormatReader, BarcodeFormat, DecodeHintType } from \"@zxing/library\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reader = () => {\n  _s();\n  const [localStream, setLocalStream] = useState();\n  const Camera = useRef(null);\n  const hints = new Map();\n  const formats = [BarcodeFormat.QR_CODE, BarcodeFormat.DATA_MATRIX, BarcodeFormat.CODE_128, BarcodeFormat.CODABAR, BarcodeFormat.EAN_13, BarcodeFormat.EAN_8, BarcodeFormat.CODE_39, BarcodeFormat.CODE_93];\n  hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\n  const Scan = new BrowserMultiFormatReader(hints, 500);\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: \"user\"\n      } //전면\n      // video: { facingMode: { exact: \"environment\" } }, //후면\n    }).then(stream => {\n      console.log(stream);\n      setLocalStream(stream);\n    });\n    return () => {\n      Stop();\n    };\n  }, []);\n  useEffect(() => {\n    if (!Camera.current) return;\n    if (localStream && Camera.current) {\n      Scanning();\n    }\n    return () => {\n      Stop();\n    };\n  }, [localStream]);\n  const req = useRef();\n  const Scanning = async () => {\n    // const t = await Scan.decodeOnce();\n    console.log(\"scan\");\n    if (localStream && Camera.current) {\n      try {\n        const data = await Scan.decodeFromStream(localStream, Camera.current, (data, err) => {\n          if (data) {\n            setText(data.getText());\n            // Scan.stopContinuousDecode();\n          } else {\n            setText(\"\");\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  const Stop = () => {\n    if (localStream) {\n      const vidTrack = localStream.getVideoTracks();\n      vidTrack.forEach(track => {\n        localStream.removeTrack(track);\n      });\n    }\n  };\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: Camera,\n      id: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Reader, \"ZH/+IXJM/k/9xyXa003RhTLc8Mo=\");\n_c = Reader;\nexport default Reader;\nvar _c;\n$RefreshReg$(_c, \"Reader\");","map":{"version":3,"names":["useEffect","useRef","useState","BrowserMultiFormatReader","BarcodeFormat","DecodeHintType","jsxDEV","_jsxDEV","Reader","_s","localStream","setLocalStream","Camera","hints","Map","formats","QR_CODE","DATA_MATRIX","CODE_128","CODABAR","EAN_13","EAN_8","CODE_39","CODE_93","set","POSSIBLE_FORMATS","Scan","navigator","mediaDevices","getUserMedia","video","facingMode","then","stream","console","log","Stop","current","Scanning","req","data","decodeFromStream","err","setText","getText","error","vidTrack","getVideoTracks","forEach","track","removeTrack","text","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/hhh/src/frontend/src/QRScan.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  BrowserMultiFormatReader,\r\n  BarcodeFormat,\r\n  DecodeHintType,\r\n} from \"@zxing/library\";\r\n\r\nconst Reader = () => {\r\n  const [localStream, setLocalStream] = useState<MediaStream>();\r\n  const Camera = useRef<HTMLVideoElement>(null);\r\n  const hints = new Map();\r\n  const formats = [\r\n    BarcodeFormat.QR_CODE,\r\n    BarcodeFormat.DATA_MATRIX,\r\n    BarcodeFormat.CODE_128,\r\n    BarcodeFormat.CODABAR,\r\n    BarcodeFormat.EAN_13,\r\n    BarcodeFormat.EAN_8,\r\n    BarcodeFormat.CODE_39,\r\n    BarcodeFormat.CODE_93,\r\n  ];\r\n  hints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\r\n  const Scan = new BrowserMultiFormatReader(hints, 500);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: { facingMode: \"user\" }, //전면\r\n        // video: { facingMode: { exact: \"environment\" } }, //후면\r\n      })\r\n      .then((stream) => {\r\n        console.log(stream);\r\n        setLocalStream(stream);\r\n      });\r\n    return () => {\r\n      Stop();\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!Camera.current) return;\r\n    if (localStream && Camera.current) {\r\n      Scanning();\r\n    }\r\n    return () => {\r\n      Stop();\r\n    };\r\n  }, [localStream]);\r\n  const req = useRef<any>();\r\n  const Scanning = async () => {\r\n    // const t = await Scan.decodeOnce();\r\n    console.log(\"scan\");\r\n    if (localStream && Camera.current) {\r\n      try {\r\n        const data = await Scan.decodeFromStream(\r\n          localStream,\r\n          Camera.current,\r\n          (data, err) => {\r\n            if (data) {\r\n              setText(data.getText());\r\n              // Scan.stopContinuousDecode();\r\n            } else {\r\n              setText(\"\");\r\n            }\r\n          }\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  const Stop = () => {\r\n    if (localStream) {\r\n      const vidTrack = localStream.getVideoTracks();\r\n      vidTrack.forEach((track) => {\r\n        localStream.removeTrack(track);\r\n      });\r\n    }\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <video ref={Camera} id=\"video\" />\r\n      <span>{text}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default Reader;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}