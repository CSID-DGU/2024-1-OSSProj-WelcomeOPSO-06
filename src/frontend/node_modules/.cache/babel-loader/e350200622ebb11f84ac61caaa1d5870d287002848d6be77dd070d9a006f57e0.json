{"ast":null,"code":"var _jsxFileName = \"/Users/gim-yeongchan/\\u1100\\u1162\\u1107\\u1161\\u11AF/\\u110B\\u1169\\u1111\\u1173\\u11AB\\u1109\\u1169\\u1109\\u1173/new/src/frontend/src/QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [data, setData] = useState(\"No result\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      onResult: (result, error) => {\n        if (!!result) {\n          setData(result === null || result === void 0 ? void 0 : result.text);\n        }\n        if (!!error) {\n          console.info(error);\n        }\n      },\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(QRScanner, \"dmPFwrOsvHW3b4sogji5iMpClo0=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","QrReader","jsxDEV","_jsxDEV","Fragment","_Fragment","QRScanner","_s","data","setData","children","onResult","result","error","text","console","info","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gim-yeongchan/개발/오픈소스/new/src/frontend/src/QRScanner.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\n\nconst QRScanner = () => {\n  const [data, setData] = useState(\"No result\");\n\n  return (\n    <>\n      <QrReader\n        onResult={(result, error) => {\n          if (!!result) {\n            setData(result?.text);\n          }\n\n          if (!!error) {\n            console.info(error);\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n      <p>{data}</p>\n    </>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,WAAW,CAAC;EAE7C,oBACEG,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA,CAACF,QAAQ;MACPU,QAAQ,EAAEA,CAACC,MAAM,EAAEC,KAAK,KAAK;QAC3B,IAAI,CAAC,CAACD,MAAM,EAAE;UACZH,OAAO,CAACG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,IAAI,CAAC;QACvB;QAEA,IAAI,CAAC,CAACD,KAAK,EAAE;UACXE,OAAO,CAACC,IAAI,CAACH,KAAK,CAAC;QACrB;MACF,CAAE;MACFI,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFnB,OAAA;MAAAO,QAAA,EAAIF;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACb,CAAC;AAEP,CAAC;AAACf,EAAA,CApBID,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAsBf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}