{"ast":null,"code":"var _jsxFileName = \"E:\\\\lastlast\\\\src\\\\frontend\\\\src\\\\attendance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst today = new Date(); // 현재 날짜와 시간을 나타내는 Date 객체 생성\nconst year = today.getFullYear(); // 연도 가져오기\nconst month = String(today.getMonth() + 1).padStart(2, '0'); // 월 가져오기 (0부터 시작하므로 +1 필요), 두 자리로 만들기\nconst day = String(today.getDate()).padStart(2, '0'); // 일 가져오기, 두 자리로 만들기\n\nconst currentDate = `${year}-${month}-${day}`; // \"YYYY-MM-DD\" 형식의 날짜 문자열 생성\n\nconsole.log(currentDate);\nconst Attendance = () => {\n  _s();\n  const location = useLocation();\n  const {\n    meetingId\n  } = location.state || {};\n  const [participants, setParticipants] = useState([]);\n  useEffect(() => {\n    if (meetingId) {\n      fetch(`/api/meetings/${meetingId}/attendance`).then(response => response.json()).then(data => setParticipants(data)).catch(error => console.error(\"Error fetching attendance:\", error));\n    }\n  }, [meetingId]);\n  console.log(participants);\n  if (!meetingId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBAA8\\uC784 \\uC815\\uBCF4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uCC38\\uC5EC\\uC790 \\uCD9C\\uC11D \\uC870\\uD68C \\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"\\uBAA8\\uC784 ID: \", meetingId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uCD9C\\uC11D\\uC790 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"ID: \", participant.id, \", Meeting Name: \", participant.meetingName, \", User Email: \", participant.userEmail]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Attendance, \"LPV7PHNq6OgmdxustCpqsF6VyWM=\", false, function () {\n  return [useLocation];\n});\n_c = Attendance;\nexport default Attendance;\nvar _c;\n$RefreshReg$(_c, \"Attendance\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","today","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","currentDate","console","log","Attendance","_s","location","meetingId","state","participants","setParticipants","fetch","then","response","json","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","participant","index","id","meetingName","userEmail","_c","$RefreshReg$"],"sources":["E:/lastlast/src/frontend/src/attendance.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nconst today = new Date(); // 현재 날짜와 시간을 나타내는 Date 객체 생성\nconst year = today.getFullYear(); // 연도 가져오기\nconst month = String(today.getMonth() + 1).padStart(2, '0'); // 월 가져오기 (0부터 시작하므로 +1 필요), 두 자리로 만들기\nconst day = String(today.getDate()).padStart(2, '0'); // 일 가져오기, 두 자리로 만들기\n\nconst currentDate = `${year}-${month}-${day}`; // \"YYYY-MM-DD\" 형식의 날짜 문자열 생성\n\nconsole.log(currentDate);\nconst Attendance = () => {\n  const location = useLocation();\n  const { meetingId } = location.state || {};\n  const [participants, setParticipants] = useState([]);\n\n  useEffect(() => {\n    if (meetingId) {\n      fetch(`/api/meetings/${meetingId}/attendance`)\n        .then((response) => response.json())\n        .then((data) => setParticipants(data))\n        .catch((error) => console.error(\"Error fetching attendance:\", error));\n    }\n  }, [meetingId]);\n  console.log(participants);\n  if (!meetingId) {\n    return <div>모임 정보가 없습니다.</div>;\n  }\n\n  return (\n    <div>\n      <h2>참여자 출석 조회 페이지</h2>\n      <h3>모임 ID: {meetingId}</h3>\n      <div>\n        <h3>출석자 목록</h3>\n        <ul>\n          {participants.map((participant, index) => (\n            <li key={index}>\n              ID: {participant.id}, Meeting Name: {participant.meetingName},\n              User Email: {participant.userEmail}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Attendance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}