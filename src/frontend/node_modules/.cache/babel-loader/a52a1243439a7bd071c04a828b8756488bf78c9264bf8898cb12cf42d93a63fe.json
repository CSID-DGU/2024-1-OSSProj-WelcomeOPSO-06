{"ast":null,"code":"var _jsxFileName = \"E:\\\\lastlast\\\\src\\\\frontend\\\\src\\\\Mypage.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mypage() {\n  const handleLogout = async () => {\n    try {\n      // 로그아웃을 요청하는 fetch 코드를 작성\n      const response = await fetch(\"/logout\", {\n        // 필요에 따라 헤더나 바디 등을 설정\n      });\n      if (response.ok) {\n        // 로그아웃이 성공하면 메시지 출력 또는 다른 작업 수행\n        console.log(\"로그아웃 되었습니다.\");\n      } else {\n        // 로그아웃이 실패한 경우 에러 처리\n        console.error(\"로그아웃에 실패했습니다.\");\n      }\n    } catch (error) {\n      // 네트워크 오류 등 예외 처리\n      console.error(\"로그아웃 요청을 보내는 도중 오류가 발생했습니다:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Mypage;\nexport default Mypage;\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Mypage","handleLogout","response","fetch","ok","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/lastlast/src/frontend/src/Mypage.js"],"sourcesContent":["import React from \"react\";\n\nfunction Mypage() {\n  const handleLogout = async () => {\n    try {\n      // 로그아웃을 요청하는 fetch 코드를 작성\n      const response = await fetch(\"/logout\", {\n        // 필요에 따라 헤더나 바디 등을 설정\n      });\n\n      if (response.ok) {\n        // 로그아웃이 성공하면 메시지 출력 또는 다른 작업 수행\n        console.log(\"로그아웃 되었습니다.\");\n      } else {\n        // 로그아웃이 실패한 경우 에러 처리\n        console.error(\"로그아웃에 실패했습니다.\");\n      }\n    } catch (error) {\n      // 네트워크 오류 등 예외 처리\n      console.error(\"로그아웃 요청을 보내는 도중 오류가 발생했습니다:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>마이페이지</h1>\n      <button onClick={handleLogout}>로그아웃</button>\n    </div>\n  );\n}\n\nexport default Mypage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAChB,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;QACtC;MAAA,CACD,CAAC;MAEF,IAAID,QAAQ,CAACE,EAAE,EAAE;QACf;QACAC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC5B,CAAC,MAAM;QACL;QACAD,OAAO,CAACE,KAAK,CAAC,eAAe,CAAC;MAChC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd;MACAF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdb,OAAA;MAAQc,OAAO,EAAEZ,YAAa;MAAAO,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAACE,EAAA,GA3BQd,MAAM;AA6Bf,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}