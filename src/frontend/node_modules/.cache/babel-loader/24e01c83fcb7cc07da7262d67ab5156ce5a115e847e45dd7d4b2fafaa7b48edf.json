{"ast":null,"code":"var _jsxFileName = \"/Users/gim-yeongchan/\\u1100\\u1162\\u1107\\u1161\\u11AF/\\u110B\\u1169\\u1111\\u1173\\u11AB\\u1109\\u1169\\u1109\\u1173/new/src/frontend/src/QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [result, setResult] = useState(\"\");\n  const handleScan = data => {\n    if (data) {\n      setResult(data);\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(QrReader, {\n      delay: 300,\n      onError: handleError,\n      onScan: handleScan,\n      style: {\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"qoGl22B7WAXz9bHytSnRSI+DHp8=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","QrReader","jsxDEV","_jsxDEV","QRScanner","_s","result","setResult","handleScan","data","handleError","err","console","error","children","delay","onError","onScan","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gim-yeongchan/개발/오픈소스/new/src/frontend/src/QRScanner.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\n\nconst QRScanner = () => {\n  const [result, setResult] = useState(\"\");\n\n  const handleScan = (data) => {\n    if (data) {\n      setResult(data);\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  return (\n    <div>\n      <QrReader\n        delay={300}\n        onError={handleError}\n        onScan={handleScan}\n        style={{ width: \"100%\" }}\n      />\n      <p>{result}</p>\n    </div>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIA,IAAI,EAAE;MACRF,SAAS,CAACE,IAAI,CAAC;IACjB;EACF,CAAC;EAED,MAAMC,WAAW,GAAIC,GAAG,IAAK;IAC3BC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACpB,CAAC;EAED,oBACER,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACF,QAAQ;MACPc,KAAK,EAAE,GAAI;MACXC,OAAO,EAAEN,WAAY;MACrBO,MAAM,EAAET,UAAW;MACnBU,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFpB,OAAA;MAAAW,QAAA,EAAIR;IAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxBID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}